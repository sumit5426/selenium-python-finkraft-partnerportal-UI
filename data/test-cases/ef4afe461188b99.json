{"uid":"ef4afe461188b99","name":"verifying the GST table heading label name","fullName":"src.tests.test_03_credentials.TestCredentials#test_gst_table_headings_match_expected","historyId":"c6e91edbb49fc3612259ef361fdaf259","time":{"start":1756129813912,"stop":1756129839044,"duration":25132},"status":"failed","statusMessage":"AssertionError: Expected AG Grid headings ['Group', 'GSTIN', 'Username', 'Password', 'Status', 'Last Edited'], but got ['Group', 'GSTIN', 'Username', 'Password', 'Status', '']\nassert ['Group', 'GS... 'Status', ''] == ['Group', 'GS...'Last Edited']\n  \n  At index 5 diff: '' != 'Last Edited'\n  \n  Full diff:\n    [\n        'Group',\n        'GSTIN',\n        'Username',\n        'Password',\n        'Status',\n  -     'Last Edited',\n  +     '',\n    ]","statusTrace":"self = <tests.test_03_credentials.TestCredentials object at 0x7f83422b59a0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b135f8b412efa8d07f2a63e8c9044364\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"verifying the GST table heading label name\")\n    @pytest.mark.smoke\n    def test_gst_table_headings_match_expected(self,driver, config):\n        expected_headings = ['Group', 'GSTIN', 'Username', 'Password', 'Status', 'Last Edited']\n        login_page = LoginPage(driver)\n        dashboard_page = login_page.login(config[\"username\"], config[\"password\"])\n        credentials_page = dashboard_page.go_to_credentials()\n        actual_headings = credentials_page.get_gst_ag_grid_table_headings()\n        if credentials_page.is_no_data_displayed_in_cred_module():\n            pytest.skip(\"No data present, skipping test.\")\n        if not actual_headings:\n            pytest.skip(\"No data present, so table headings are not rendered.\")\n>       assert actual_headings == expected_headings, (\n            f\"Expected AG Grid headings {expected_headings}, but got {actual_headings}\"\n        )\nE       AssertionError: Expected AG Grid headings ['Group', 'GSTIN', 'Username', 'Password', 'Status', 'Last Edited'], but got ['Group', 'GSTIN', 'Username', 'Password', 'Status', '']\nE       assert ['Group', 'GS... 'Status', ''] == ['Group', 'GS...'Last Edited']\nE         \nE         At index 5 diff: '' != 'Last Edited'\nE         \nE         Full diff:\nE           [\nE               'Group',\nE               'GSTIN',\nE               'Username',\nE               'Password',\nE               'Status',\nE         -     'Last Edited',\nE         +     '',\nE           ]\n\nsrc/tests/test_03_credentials.py:58: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1756129298633,"stop":1756129298638,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1756129810657,"stop":1756129813911,"duration":3254},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected AG Grid headings ['Group', 'GSTIN', 'Username', 'Password', 'Status', 'Last Edited'], but got ['Group', 'GSTIN', 'Username', 'Password', 'Status', '']\nassert ['Group', 'GS... 'Status', ''] == ['Group', 'GS...'Last Edited']\n  \n  At index 5 diff: '' != 'Last Edited'\n  \n  Full diff:\n    [\n        'Group',\n        'GSTIN',\n        'Username',\n        'Password',\n        'Status',\n  -     'Last Edited',\n  +     '',\n    ]","statusTrace":"self = <tests.test_03_credentials.TestCredentials object at 0x7f83422b59a0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b135f8b412efa8d07f2a63e8c9044364\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"verifying the GST table heading label name\")\n    @pytest.mark.smoke\n    def test_gst_table_headings_match_expected(self,driver, config):\n        expected_headings = ['Group', 'GSTIN', 'Username', 'Password', 'Status', 'Last Edited']\n        login_page = LoginPage(driver)\n        dashboard_page = login_page.login(config[\"username\"], config[\"password\"])\n        credentials_page = dashboard_page.go_to_credentials()\n        actual_headings = credentials_page.get_gst_ag_grid_table_headings()\n        if credentials_page.is_no_data_displayed_in_cred_module():\n            pytest.skip(\"No data present, skipping test.\")\n        if not actual_headings:\n            pytest.skip(\"No data present, so table headings are not rendered.\")\n>       assert actual_headings == expected_headings, (\n            f\"Expected AG Grid headings {expected_headings}, but got {actual_headings}\"\n        )\nE       AssertionError: Expected AG Grid headings ['Group', 'GSTIN', 'Username', 'Password', 'Status', 'Last Edited'], but got ['Group', 'GSTIN', 'Username', 'Password', 'Status', '']\nE       assert ['Group', 'GS... 'Status', ''] == ['Group', 'GS...'Last Edited']\nE         \nE         At index 5 diff: '' != 'Last Edited'\nE         \nE         Full diff:\nE           [\nE               'Group',\nE               'GSTIN',\nE               'Username',\nE               'Password',\nE               'Status',\nE         -     'Last Edited',\nE         +     '',\nE           ]\n\nsrc/tests/test_03_credentials.py:58: AssertionError","steps":[{"name":"Enter email and password and click Sign In.","time":{"start":1756129813913,"stop":1756129824998,"duration":11085},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'sumit@kgrp.in'"},{"name":"password","value":"'HRzyUJi0'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"542dd04901b46a56","name":"test_gst_table_headings_match_expected_2025-08-25_13-50-39.png","source":"542dd04901b46a56.png","type":"image/png","size":40695}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1756129839089,"stop":1756129839158,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"src.tests"},{"name":"suite","value":"test_03_credentials"},{"name":"subSuite","value":"TestCredentials"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.tests.test_03_credentials"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":["failed"],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":6},"items":[{"uid":"ace9e93cc998ad73","status":"passed","time":{"start":1754371288396,"stop":1754371311070,"duration":22674}},{"uid":"e1f3d5878fe1464","status":"passed","time":{"start":1753857879919,"stop":1753857903222,"duration":23303}},{"uid":"61e1e0a4f2766e7b","status":"passed","time":{"start":1753682757795,"stop":1753682779805,"duration":22010}},{"uid":"34e4235b5d8ac26b","status":"passed","time":{"start":1753442672868,"stop":1753442684611,"duration":11743}},{"uid":"3cb71250349528af","status":"passed","time":{"start":1753438700144,"stop":1753438714055,"duration":13911}}]},"tags":["smoke"]},"source":"ef4afe461188b99.json","parameterValues":[]}