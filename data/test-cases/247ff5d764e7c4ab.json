{"uid":"247ff5d764e7c4ab","name":"Verifying table header pinned functionality","fullName":"src.tests.test_04_flight.TestFlights#test_table_header_pinned_functionality","historyId":"51a5c8d9ab709e2c8dcc3d501981db24","time":{"start":1756130791444,"stop":1756130810559,"duration":19115},"status":"failed","statusMessage":"AssertionError: Remove pin failed: Columns are still pinned\nassert 1 == 0","statusTrace":"self = <tests.test_04_flight.TestFlights object at 0x7f83422b5a00>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5392228778af65f88f5f4adc886e2204\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"Verifying table header pinned functionality\")\n    @pytest.mark.smoke\n    def test_table_header_pinned_functionality(self, driver, config):\n        login_page = LoginPage(driver)\n        dashboard = login_page.login(config[\"username\"], config[\"password\"])\n        flight_page = dashboard.go_to_flight_page()\n        left_pin_count = flight_page.pin_column_to_left()\n        assert left_pin_count >= 1, \"Pin to left failed: No column is pinned left\"\n        # Pin to right & assert\n        right_pin_count = flight_page.pin_column_to_right()\n        assert right_pin_count >= 1, \"Pin to right failed: No column is pinned right\"\n        flight_page.pin_column_to_remove()\n        no_left_pins = len(flight_page.get_visible_elements(flight_page.LEFT_PINNED_CONTAINER))\n>       assert no_left_pins == 0, \"Remove pin failed: Columns are still pinned\"\nE       AssertionError: Remove pin failed: Columns are still pinned\nE       assert 1 == 0\n\nsrc/tests/test_04_flight.py:334: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1756129298633,"stop":1756129298638,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1756130788865,"stop":1756130791442,"duration":2577},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Remove pin failed: Columns are still pinned\nassert 1 == 0","statusTrace":"self = <tests.test_04_flight.TestFlights object at 0x7f83422b5a00>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5392228778af65f88f5f4adc886e2204\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"Verifying table header pinned functionality\")\n    @pytest.mark.smoke\n    def test_table_header_pinned_functionality(self, driver, config):\n        login_page = LoginPage(driver)\n        dashboard = login_page.login(config[\"username\"], config[\"password\"])\n        flight_page = dashboard.go_to_flight_page()\n        left_pin_count = flight_page.pin_column_to_left()\n        assert left_pin_count >= 1, \"Pin to left failed: No column is pinned left\"\n        # Pin to right & assert\n        right_pin_count = flight_page.pin_column_to_right()\n        assert right_pin_count >= 1, \"Pin to right failed: No column is pinned right\"\n        flight_page.pin_column_to_remove()\n        no_left_pins = len(flight_page.get_visible_elements(flight_page.LEFT_PINNED_CONTAINER))\n>       assert no_left_pins == 0, \"Remove pin failed: Columns are still pinned\"\nE       AssertionError: Remove pin failed: Columns are still pinned\nE       assert 1 == 0\n\nsrc/tests/test_04_flight.py:334: AssertionError","steps":[{"name":"Enter email and password and click Sign In.","time":{"start":1756130791445,"stop":1756130802654,"duration":11209},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'sumit@kgrp.in'"},{"name":"password","value":"'HRzyUJi0'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4643404cf11d6d91","name":"test_table_header_pinned_functionality_2025-08-25_14-06-50.png","source":"4643404cf11d6d91.png","type":"image/png","size":59595}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1756130810674,"stop":1756130810748,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"src.tests"},{"name":"suite","value":"test_04_flight"},{"name":"subSuite","value":"TestFlights"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.tests.test_04_flight"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":["failed"],"flaky":false}],"tags":["smoke"]},"source":"247ff5d764e7c4ab.json","parameterValues":[]}