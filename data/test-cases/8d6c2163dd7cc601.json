{"uid":"8d6c2163dd7cc601","name":"verifying columns sorting functionality","fullName":"src.tests.test_04_flight.TestFlights#test_sort_toggle_by_index","historyId":"d650749441ca781b014c03b2918a0c23","time":{"start":1756130392813,"stop":1756130415408,"duration":22595},"status":"failed","statusMessage":"AssertionError: [col 3] Not sorted ascending: ['14/05/2025', '14/05/2025', '25/04/2025', '17/07/2025', '24/08/2024', '24/08/2024', '25/04/2025', '19/05/2025', '02/06/2025', '25/04/2025', '30/06/2025', '25/04/2025', '31/05/2025', '25/04/2025', '03/05/2025', '06/08/2024', '15/07/2025']\nassert ['14/05/2025'...08/2024', ...] == ['02/06/2025'...07/2025', ...]\n  \n  At index 0 diff: '14/05/2025' != '02/06/2025'\n  \n  Full diff:\n    [\n  -     '02/06/2025',\n  -     '03/05/2025',\n  -     '06/08/2024',\n        '14/05/2025',\n        '14/05/2025',\n  -     '15/07/2025',\n  ?      ^   ^\n  +     '25/04/2025',\n  ?      ^   ^\n        '17/07/2025',\n  -     '19/05/2025',\n        '24/08/2024',\n        '24/08/2024',\n        '25/04/2025',\n  +     '19/05/2025',\n  -     '25/04/2025',\n  ?       -  ^\n  +     '02/06/2025',\n  ?      +   ^\n  -     '25/04/2025',\n  -     '25/04/2025',\n        '25/04/2025',\n        '30/06/2025',\n  +     '25/04/2025',\n        '31/05/2025',\n  +     '25/04/2025',\n  +     '03/05/2025',\n  +     '06/08/2024',\n  +     '15/07/2025',\n    ]","statusTrace":"self = <tests.test_04_flight.TestFlights object at 0x7f83424100a0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8e7fd06822ef6aaeb86c640857f0b042\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"verifying columns sorting functionality\")\n    @pytest.mark.smoke\n    def test_sort_toggle_by_index(self, driver, config):\n        login_page = LoginPage(driver)\n        dashboard = login_page.login(config[\"username\"], config[\"password\"])\n        flight_page = dashboard.go_to_flight_page()\n        for col_idx in [3, 4, 5]:\n            # Ascending\n            clicks_asc = flight_page.sort_by_column_index(col_idx, direction=\"asc\")\n            time.sleep(0.5)\n            col_values = flight_page.get_column_values_by_index(col_idx)\n>           assert col_values == sorted(col_values), f\"[col {col_idx}] Not sorted ascending: {col_values}\"\nE           AssertionError: [col 3] Not sorted ascending: ['14/05/2025', '14/05/2025', '25/04/2025', '17/07/2025', '24/08/2024', '24/08/2024', '25/04/2025', '19/05/2025', '02/06/2025', '25/04/2025', '30/06/2025', '25/04/2025', '31/05/2025', '25/04/2025', '03/05/2025', '06/08/2024', '15/07/2025']\nE           assert ['14/05/2025'...08/2024', ...] == ['02/06/2025'...07/2025', ...]\nE             \nE             At index 0 diff: '14/05/2025' != '02/06/2025'\nE             \nE             Full diff:\nE               [\nE             -     '02/06/2025',\nE             -     '03/05/2025',\nE             -     '06/08/2024',\nE                   '14/05/2025',\nE                   '14/05/2025',\nE             -     '15/07/2025',\nE             ?      ^   ^\nE             +     '25/04/2025',\nE             ?      ^   ^\nE                   '17/07/2025',\nE             -     '19/05/2025',\nE                   '24/08/2024',\nE                   '24/08/2024',\nE                   '25/04/2025',\nE             +     '19/05/2025',\nE             -     '25/04/2025',\nE             ?       -  ^\nE             +     '02/06/2025',\nE             ?      +   ^\nE             -     '25/04/2025',\nE             -     '25/04/2025',\nE                   '25/04/2025',\nE                   '30/06/2025',\nE             +     '25/04/2025',\nE                   '31/05/2025',\nE             +     '25/04/2025',\nE             +     '03/05/2025',\nE             +     '06/08/2024',\nE             +     '15/07/2025',\nE               ]\n\nsrc/tests/test_04_flight.py:148: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1756129298633,"stop":1756129298638,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1756130390251,"stop":1756130392811,"duration":2560},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: [col 3] Not sorted ascending: ['14/05/2025', '14/05/2025', '25/04/2025', '17/07/2025', '24/08/2024', '24/08/2024', '25/04/2025', '19/05/2025', '02/06/2025', '25/04/2025', '30/06/2025', '25/04/2025', '31/05/2025', '25/04/2025', '03/05/2025', '06/08/2024', '15/07/2025']\nassert ['14/05/2025'...08/2024', ...] == ['02/06/2025'...07/2025', ...]\n  \n  At index 0 diff: '14/05/2025' != '02/06/2025'\n  \n  Full diff:\n    [\n  -     '02/06/2025',\n  -     '03/05/2025',\n  -     '06/08/2024',\n        '14/05/2025',\n        '14/05/2025',\n  -     '15/07/2025',\n  ?      ^   ^\n  +     '25/04/2025',\n  ?      ^   ^\n        '17/07/2025',\n  -     '19/05/2025',\n        '24/08/2024',\n        '24/08/2024',\n        '25/04/2025',\n  +     '19/05/2025',\n  -     '25/04/2025',\n  ?       -  ^\n  +     '02/06/2025',\n  ?      +   ^\n  -     '25/04/2025',\n  -     '25/04/2025',\n        '25/04/2025',\n        '30/06/2025',\n  +     '25/04/2025',\n        '31/05/2025',\n  +     '25/04/2025',\n  +     '03/05/2025',\n  +     '06/08/2024',\n  +     '15/07/2025',\n    ]","statusTrace":"self = <tests.test_04_flight.TestFlights object at 0x7f83424100a0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8e7fd06822ef6aaeb86c640857f0b042\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"verifying columns sorting functionality\")\n    @pytest.mark.smoke\n    def test_sort_toggle_by_index(self, driver, config):\n        login_page = LoginPage(driver)\n        dashboard = login_page.login(config[\"username\"], config[\"password\"])\n        flight_page = dashboard.go_to_flight_page()\n        for col_idx in [3, 4, 5]:\n            # Ascending\n            clicks_asc = flight_page.sort_by_column_index(col_idx, direction=\"asc\")\n            time.sleep(0.5)\n            col_values = flight_page.get_column_values_by_index(col_idx)\n>           assert col_values == sorted(col_values), f\"[col {col_idx}] Not sorted ascending: {col_values}\"\nE           AssertionError: [col 3] Not sorted ascending: ['14/05/2025', '14/05/2025', '25/04/2025', '17/07/2025', '24/08/2024', '24/08/2024', '25/04/2025', '19/05/2025', '02/06/2025', '25/04/2025', '30/06/2025', '25/04/2025', '31/05/2025', '25/04/2025', '03/05/2025', '06/08/2024', '15/07/2025']\nE           assert ['14/05/2025'...08/2024', ...] == ['02/06/2025'...07/2025', ...]\nE             \nE             At index 0 diff: '14/05/2025' != '02/06/2025'\nE             \nE             Full diff:\nE               [\nE             -     '02/06/2025',\nE             -     '03/05/2025',\nE             -     '06/08/2024',\nE                   '14/05/2025',\nE                   '14/05/2025',\nE             -     '15/07/2025',\nE             ?      ^   ^\nE             +     '25/04/2025',\nE             ?      ^   ^\nE                   '17/07/2025',\nE             -     '19/05/2025',\nE                   '24/08/2024',\nE                   '24/08/2024',\nE                   '25/04/2025',\nE             +     '19/05/2025',\nE             -     '25/04/2025',\nE             ?       -  ^\nE             +     '02/06/2025',\nE             ?      +   ^\nE             -     '25/04/2025',\nE             -     '25/04/2025',\nE                   '25/04/2025',\nE                   '30/06/2025',\nE             +     '25/04/2025',\nE                   '31/05/2025',\nE             +     '25/04/2025',\nE             +     '03/05/2025',\nE             +     '06/08/2024',\nE             +     '15/07/2025',\nE               ]\n\nsrc/tests/test_04_flight.py:148: AssertionError","steps":[{"name":"Enter email and password and click Sign In.","time":{"start":1756130392813,"stop":1756130404842,"duration":12029},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'sumit@kgrp.in'"},{"name":"password","value":"'HRzyUJi0'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"c14479fbd41293cb","name":"test_sort_toggle_by_index_2025-08-25_14-00-15.png","source":"c14479fbd41293cb.png","type":"image/png","size":64233}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1756130415522,"stop":1756130415596,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"src.tests"},{"name":"suite","value":"test_04_flight"},{"name":"subSuite","value":"TestFlights"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.tests.test_04_flight"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":["failed"],"flaky":false}],"tags":["smoke"]},"source":"8d6c2163dd7cc601.json","parameterValues":[]}