{"uid":"5f6084be3e80411d","name":"Verifying invoice view functionality","fullName":"src.tests.test_04_flight.TestFlights#test_invoice_pdf_available_in_ui","historyId":"fa0bcb402ee88cae56e8ebdcdd2b6ca1","time":{"start":1756130735148,"stop":1756130788674,"duration":53526},"status":"broken","statusMessage":"Exception: Could not find View Invoice button after scrolling","statusTrace":"self = <tests.test_04_flight.TestFlights object at 0x7f8342410d90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e741a6ca2b1d8f0da04d676ba59517cd\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"Verifying invoice view functionality\")\n    @pytest.mark.smoke\n    def test_invoice_pdf_available_in_ui(self, driver, config):\n        login_page = LoginPage(driver)\n        dashboard = login_page.login(config[\"username\"], config[\"password\"])\n        flight_page = dashboard.go_to_flight_page()\n>       is_invoice_visible=flight_page.view_invoice_pdf()\n\nsrc/tests/test_04_flight.py:318: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.flight_page.FlightPage object at 0x7f834218f700>, max_steps = 20\nscroll_step = 1200\n\n    def view_invoice_pdf(self, max_steps=20, scroll_step=1200):\n        scroll_container = self.wait.until(EC.presence_of_element_located(self.BODY_SCROLL_LOCATOR))\n        self.driver.execute_script(\"arguments[0].scrollLeft = 0;\", scroll_container)\n        last_scroll = -1\n        found = False\n    \n        for step in range(max_steps):\n            buttons = self.driver.find_elements(*self.INVOICE_VIEW_BUTTON_LOCATOR)\n            if buttons:\n                button = buttons[0]\n                self.driver.execute_script(\"arguments[0].scrollIntoView({block:'center'});\", button)\n                WebDriverWait(self.driver, 3).until(EC.element_to_be_clickable(self.INVOICE_VIEW_BUTTON_LOCATOR))\n                button.click()\n                found = True\n                break\n    \n            current_scroll = self.driver.execute_script(\"return arguments[0].scrollLeft;\", scroll_container)\n            max_scroll = self.driver.execute_script(\"return arguments[0].scrollWidth - arguments[0].clientWidth;\",\n                                                    scroll_container)\n            if current_scroll is None or max_scroll is None:\n                raise Exception(\"scroll_container is not a real scrollable element; check your BODY_SCROLL_LOCATOR\")\n            print(f\"Scrolling... current: {current_scroll}, max: {max_scroll}\")\n    \n            if current_scroll >= max_scroll or current_scroll == last_scroll:\n                break\n            self.driver.execute_script(f\"arguments[0].scrollLeft += {scroll_step};\", scroll_container)\n            last_scroll = current_scroll\n    \n        if not found:\n>           raise Exception(\"Could not find View Invoice button after scrolling\")\nE           Exception: Could not find View Invoice button after scrolling\n\nsrc/pages/flight_page.py:640: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1756129298633,"stop":1756129298638,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1756130731951,"stop":1756130735146,"duration":3195},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"Exception: Could not find View Invoice button after scrolling","statusTrace":"self = <tests.test_04_flight.TestFlights object at 0x7f8342410d90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e741a6ca2b1d8f0da04d676ba59517cd\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"Verifying invoice view functionality\")\n    @pytest.mark.smoke\n    def test_invoice_pdf_available_in_ui(self, driver, config):\n        login_page = LoginPage(driver)\n        dashboard = login_page.login(config[\"username\"], config[\"password\"])\n        flight_page = dashboard.go_to_flight_page()\n>       is_invoice_visible=flight_page.view_invoice_pdf()\n\nsrc/tests/test_04_flight.py:318: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.flight_page.FlightPage object at 0x7f834218f700>, max_steps = 20\nscroll_step = 1200\n\n    def view_invoice_pdf(self, max_steps=20, scroll_step=1200):\n        scroll_container = self.wait.until(EC.presence_of_element_located(self.BODY_SCROLL_LOCATOR))\n        self.driver.execute_script(\"arguments[0].scrollLeft = 0;\", scroll_container)\n        last_scroll = -1\n        found = False\n    \n        for step in range(max_steps):\n            buttons = self.driver.find_elements(*self.INVOICE_VIEW_BUTTON_LOCATOR)\n            if buttons:\n                button = buttons[0]\n                self.driver.execute_script(\"arguments[0].scrollIntoView({block:'center'});\", button)\n                WebDriverWait(self.driver, 3).until(EC.element_to_be_clickable(self.INVOICE_VIEW_BUTTON_LOCATOR))\n                button.click()\n                found = True\n                break\n    \n            current_scroll = self.driver.execute_script(\"return arguments[0].scrollLeft;\", scroll_container)\n            max_scroll = self.driver.execute_script(\"return arguments[0].scrollWidth - arguments[0].clientWidth;\",\n                                                    scroll_container)\n            if current_scroll is None or max_scroll is None:\n                raise Exception(\"scroll_container is not a real scrollable element; check your BODY_SCROLL_LOCATOR\")\n            print(f\"Scrolling... current: {current_scroll}, max: {max_scroll}\")\n    \n            if current_scroll >= max_scroll or current_scroll == last_scroll:\n                break\n            self.driver.execute_script(f\"arguments[0].scrollLeft += {scroll_step};\", scroll_container)\n            last_scroll = current_scroll\n    \n        if not found:\n>           raise Exception(\"Could not find View Invoice button after scrolling\")\nE           Exception: Could not find View Invoice button after scrolling\n\nsrc/pages/flight_page.py:640: Exception","steps":[{"name":"Enter email and password and click Sign In.","time":{"start":1756130735148,"stop":1756130747451,"duration":12303},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'sumit@kgrp.in'"},{"name":"password","value":"'HRzyUJi0'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9b9c7ac28c496452","name":"test_invoice_pdf_available_in_ui_2025-08-25_14-06-28.png","source":"9b9c7ac28c496452.png","type":"image/png","size":42783}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1756130788790,"stop":1756130788861,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"src.tests"},{"name":"suite","value":"test_04_flight"},{"name":"subSuite","value":"TestFlights"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.tests.test_04_flight"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":["broken"],"flaky":false}],"tags":["smoke"]},"source":"5f6084be3e80411d.json","parameterValues":[]}