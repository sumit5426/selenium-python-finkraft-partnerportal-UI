{"uid":"118dee2ac7274b6f","name":"verifying the flight table heading label name","fullName":"src.tests.test_04_flight.TestFlights#test_flight_table_headings_match_expected","historyId":"4ade68439094c746e0182e21ad8f809b","time":{"start":1756130266468,"stop":1756130279927,"duration":13459},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=139.0.7258.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55ef8e57f01a <unknown>\n#1 0x55ef8e01ea70 <unknown>\n#2 0x55ef8e0256bf <unknown>\n#3 0x55ef8e027f58 <unknown>\n#4 0x55ef8e027fe3 <unknown>\n#5 0x55ef8e06addd <unknown>\n#6 0x55ef8e0963e2 <unknown>\n#7 0x55ef8e06449a <unknown>\n#8 0x55ef8e0965ae <unknown>\n#9 0x55ef8e0bc14f <unknown>\n#10 0x55ef8e0961b3 <unknown>\n#11 0x55ef8e06259b <unknown>\n#12 0x55ef8e063971 <unknown>\n#13 0x55ef8e5441eb <unknown>\n#14 0x55ef8e547f39 <unknown>\n#15 0x55ef8e52b2c9 <unknown>\n#16 0x55ef8e548ae8 <unknown>\n#17 0x55ef8e50fbaf <unknown>\n#18 0x55ef8e56c0a8 <unknown>\n#19 0x55ef8e56c286 <unknown>\n#20 0x55ef8e57dff6 <unknown>\n#21 0x7f01d2a9caa4 <unknown>\n#22 0x7f01d2b29c3c <unknown>","statusTrace":"self = <tests.test_04_flight.TestFlights object at 0x7f83423d42e0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0203e5d29d147b3a52ef8f77158b3901\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"verifying the flight table heading label name\")\n    @pytest.mark.smoke\n    def test_flight_table_headings_match_expected(self, driver, config):\n        login_page = LoginPage(driver)\n        dashboard_page = login_page.login(config[\"username\"], config[\"password\"])\n        flight_page = dashboard_page.go_to_flight_page()\n>       headings=flight_page.get_flight_ag_grid_table_headings()\n\nsrc/tests/test_04_flight.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/pages/flight_page.py:84: in get_flight_ag_grid_table_headings\n    return self.ag_table_header_text(self.BODY_SCROLL_LOCATOR)\nsrc/utils/browser_utility.py:214: in ag_table_header_text\n    text = el.text.strip()\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:109: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:572: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:448: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f83420a1760>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#20 0x55ef8e57dff6 \\\\u003Cunknown>\\\\n#21 0x7f01d2a9caa4 \\\\u003Cunknown>\\\\n#22 0x7f01d2b29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=139.0.7258.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55ef8e57f01a <unknown>\nE       #1 0x55ef8e01ea70 <unknown>\nE       #2 0x55ef8e0256bf <unknown>\nE       #3 0x55ef8e027f58 <unknown>\nE       #4 0x55ef8e027fe3 <unknown>\nE       #5 0x55ef8e06addd <unknown>\nE       #6 0x55ef8e0963e2 <unknown>\nE       #7 0x55ef8e06449a <unknown>\nE       #8 0x55ef8e0965ae <unknown>\nE       #9 0x55ef8e0bc14f <unknown>\nE       #10 0x55ef8e0961b3 <unknown>\nE       #11 0x55ef8e06259b <unknown>\nE       #12 0x55ef8e063971 <unknown>\nE       #13 0x55ef8e5441eb <unknown>\nE       #14 0x55ef8e547f39 <unknown>\nE       #15 0x55ef8e52b2c9 <unknown>\nE       #16 0x55ef8e548ae8 <unknown>\nE       #17 0x55ef8e50fbaf <unknown>\nE       #18 0x55ef8e56c0a8 <unknown>\nE       #19 0x55ef8e56c286 <unknown>\nE       #20 0x55ef8e57dff6 <unknown>\nE       #21 0x7f01d2a9caa4 <unknown>\nE       #22 0x7f01d2b29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1756129298633,"stop":1756129298638,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1756130263758,"stop":1756130266466,"duration":2708},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=139.0.7258.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55ef8e57f01a <unknown>\n#1 0x55ef8e01ea70 <unknown>\n#2 0x55ef8e0256bf <unknown>\n#3 0x55ef8e027f58 <unknown>\n#4 0x55ef8e027fe3 <unknown>\n#5 0x55ef8e06addd <unknown>\n#6 0x55ef8e0963e2 <unknown>\n#7 0x55ef8e06449a <unknown>\n#8 0x55ef8e0965ae <unknown>\n#9 0x55ef8e0bc14f <unknown>\n#10 0x55ef8e0961b3 <unknown>\n#11 0x55ef8e06259b <unknown>\n#12 0x55ef8e063971 <unknown>\n#13 0x55ef8e5441eb <unknown>\n#14 0x55ef8e547f39 <unknown>\n#15 0x55ef8e52b2c9 <unknown>\n#16 0x55ef8e548ae8 <unknown>\n#17 0x55ef8e50fbaf <unknown>\n#18 0x55ef8e56c0a8 <unknown>\n#19 0x55ef8e56c286 <unknown>\n#20 0x55ef8e57dff6 <unknown>\n#21 0x7f01d2a9caa4 <unknown>\n#22 0x7f01d2b29c3c <unknown>","statusTrace":"self = <tests.test_04_flight.TestFlights object at 0x7f83423d42e0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0203e5d29d147b3a52ef8f77158b3901\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"verifying the flight table heading label name\")\n    @pytest.mark.smoke\n    def test_flight_table_headings_match_expected(self, driver, config):\n        login_page = LoginPage(driver)\n        dashboard_page = login_page.login(config[\"username\"], config[\"password\"])\n        flight_page = dashboard_page.go_to_flight_page()\n>       headings=flight_page.get_flight_ag_grid_table_headings()\n\nsrc/tests/test_04_flight.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/pages/flight_page.py:84: in get_flight_ag_grid_table_headings\n    return self.ag_table_header_text(self.BODY_SCROLL_LOCATOR)\nsrc/utils/browser_utility.py:214: in ag_table_header_text\n    text = el.text.strip()\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:109: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:572: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:448: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f83420a1760>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#20 0x55ef8e57dff6 \\\\u003Cunknown>\\\\n#21 0x7f01d2a9caa4 \\\\u003Cunknown>\\\\n#22 0x7f01d2b29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=139.0.7258.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55ef8e57f01a <unknown>\nE       #1 0x55ef8e01ea70 <unknown>\nE       #2 0x55ef8e0256bf <unknown>\nE       #3 0x55ef8e027f58 <unknown>\nE       #4 0x55ef8e027fe3 <unknown>\nE       #5 0x55ef8e06addd <unknown>\nE       #6 0x55ef8e0963e2 <unknown>\nE       #7 0x55ef8e06449a <unknown>\nE       #8 0x55ef8e0965ae <unknown>\nE       #9 0x55ef8e0bc14f <unknown>\nE       #10 0x55ef8e0961b3 <unknown>\nE       #11 0x55ef8e06259b <unknown>\nE       #12 0x55ef8e063971 <unknown>\nE       #13 0x55ef8e5441eb <unknown>\nE       #14 0x55ef8e547f39 <unknown>\nE       #15 0x55ef8e52b2c9 <unknown>\nE       #16 0x55ef8e548ae8 <unknown>\nE       #17 0x55ef8e50fbaf <unknown>\nE       #18 0x55ef8e56c0a8 <unknown>\nE       #19 0x55ef8e56c286 <unknown>\nE       #20 0x55ef8e57dff6 <unknown>\nE       #21 0x7f01d2a9caa4 <unknown>\nE       #22 0x7f01d2b29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException","steps":[{"name":"Enter email and password and click Sign In.","time":{"start":1756130266468,"stop":1756130278606,"duration":12138},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'sumit@kgrp.in'"},{"name":"password","value":"'HRzyUJi0'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"bfa279261aaadb71","name":"test_flight_table_headings_match_expected_2025-08-25_13-58-00.png","source":"bfa279261aaadb71.png","type":"image/png","size":29679}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1756130280123,"stop":1756130280193,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"src.tests"},{"name":"suite","value":"test_04_flight"},{"name":"subSuite","value":"TestFlights"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.tests.test_04_flight"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":["broken"],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"64a3e476fb025a9","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=138.0.7204.184); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n0   chromedriver                        0x00000001053e8ea4 cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x00000001053e0dac cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x0000000104f323ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x0000000104f380a0 cxxbridge1$string$len + 114380\n4   chromedriver                        0x0000000104f3a3e4 cxxbridge1$string$len + 123408\n5   chromedriver                        0x0000000104f3a48c cxxbridge1$string$len + 123576\n6   chromedriver                        0x0000000104f744d4 cxxbridge1$string$len + 361216\n7   chromedriver                        0x0000000104f6ede4 cxxbridge1$string$len + 338960\n8   chromedriver                        0x0000000104fba934 cxxbridge1$string$len + 649056\n9   chromedriver                        0x0000000104f6d834 cxxbridge1$string$len + 333408\n10  chromedriver                        0x00000001053abfc0 cxxbridge1$str$ptr + 2473268\n11  chromedriver                        0x00000001053af22c cxxbridge1$str$ptr + 2486176\n12  chromedriver                        0x000000010538da08 cxxbridge1$str$ptr + 2348924\n13  chromedriver                        0x00000001053afae8 cxxbridge1$str$ptr + 2488412\n14  chromedriver                        0x000000010537ea98 cxxbridge1$str$ptr + 2287628\n15  chromedriver                        0x00000001053cf9d8 cxxbridge1$str$ptr + 2619212\n16  chromedriver                        0x00000001053cfb64 cxxbridge1$str$ptr + 2619608\n17  chromedriver                        0x00000001053e09e8 cxxbridge1$str$ptr + 2688860\n18  libsystem_pthread.dylib             0x00000001967c5f94 _pthread_start + 136\n19  libsystem_pthread.dylib             0x00000001967c0d34 thread_start + 8","time":{"start":1754371623628,"stop":1754371634313,"duration":10685}},{"uid":"9ecd04c2cde63421","status":"passed","time":{"start":1753858185798,"stop":1753858202046,"duration":16248}}]},"tags":["smoke"]},"source":"118dee2ac7274b6f.json","parameterValues":[]}