{"uid":"c03e08ca99e86e3b","name":"Verifying table_headers_aggregate_functionality","fullName":"src.tests.test_04_flight.TestFlights#test_all_table_headers_aggregate_functionality","historyId":"884bf1266c6fc4e437b66b25025d75c5","time":{"start":1756130708131,"stop":1756130731733,"duration":23602},"status":"broken","statusMessage":"Exception: [CLICK ERROR] Element not clickable: ('xpath', \"(//div[contains(@role,'presentation')])[81]\")","statusTrace":"self = <pages.flight_page.FlightPage object at 0x7f83422bafa0>\nlocator = ('xpath', \"(//div[contains(@role,'presentation')])[81]\")\n\n    def click(self, locator):\n        try:\n>           element = self.wait.until(EC.element_to_be_clickable(locator))\n\nsrc/utils/browser_utility.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fee73871f073cb4c52ae0af5a1ada2e9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f83421e5550>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_04_flight.TestFlights object at 0x7f83423d9550>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fee73871f073cb4c52ae0af5a1ada2e9\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"Verifying table_headers_aggregate_functionality\")\n    @pytest.mark.smoke\n    def test_all_table_headers_aggregate_functionality(self, driver, config):\n        login_page = LoginPage(driver)\n        dashboard = login_page.login(config[\"username\"], config[\"password\"])\n        flight_page = dashboard.go_to_flight_page()\n        # Skip if no headings present\n        if not flight_page.has_table_headings():\n            pytest.skip(\"No table headings; nothing to toggle.\")\n        # Open the column selector panel\n        flight_page.open_column_selector(toggle_index=0)\n>       flight_page.enter_text_into_textbox_for_column_header_selection()\n\nsrc/tests/test_04_flight.py:309: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/pages/flight_page.py:591: in enter_text_into_textbox_for_column_header_selection\n    self.click(self.DESELECT_ALL_COLUMNS_LOCATOR)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.flight_page.FlightPage object at 0x7f83422bafa0>\nlocator = ('xpath', \"(//div[contains(@role,'presentation')])[81]\")\n\n    def click(self, locator):\n        try:\n            element = self.wait.until(EC.element_to_be_clickable(locator))\n            self.driver.execute_script(\"arguments[0].scrollIntoView({block: 'center'});\", element)\n            try:\n                element.click()\n            except ElementClickInterceptedException:\n                self.driver.execute_script(\"arguments[0].click();\", element)\n            return self\n        except TimeoutException:\n>           raise Exception(f\"[CLICK ERROR] Element not clickable: {locator}\")\nE           Exception: [CLICK ERROR] Element not clickable: ('xpath', \"(//div[contains(@role,'presentation')])[81]\")\n\nsrc/utils/browser_utility.py:32: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1756129298633,"stop":1756129298638,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1756130705450,"stop":1756130708130,"duration":2680},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"Exception: [CLICK ERROR] Element not clickable: ('xpath', \"(//div[contains(@role,'presentation')])[81]\")","statusTrace":"self = <pages.flight_page.FlightPage object at 0x7f83422bafa0>\nlocator = ('xpath', \"(//div[contains(@role,'presentation')])[81]\")\n\n    def click(self, locator):\n        try:\n>           element = self.wait.until(EC.element_to_be_clickable(locator))\n\nsrc/utils/browser_utility.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fee73871f073cb4c52ae0af5a1ada2e9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f83421e5550>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_04_flight.TestFlights object at 0x7f83423d9550>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fee73871f073cb4c52ae0af5a1ada2e9\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"Verifying table_headers_aggregate_functionality\")\n    @pytest.mark.smoke\n    def test_all_table_headers_aggregate_functionality(self, driver, config):\n        login_page = LoginPage(driver)\n        dashboard = login_page.login(config[\"username\"], config[\"password\"])\n        flight_page = dashboard.go_to_flight_page()\n        # Skip if no headings present\n        if not flight_page.has_table_headings():\n            pytest.skip(\"No table headings; nothing to toggle.\")\n        # Open the column selector panel\n        flight_page.open_column_selector(toggle_index=0)\n>       flight_page.enter_text_into_textbox_for_column_header_selection()\n\nsrc/tests/test_04_flight.py:309: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/pages/flight_page.py:591: in enter_text_into_textbox_for_column_header_selection\n    self.click(self.DESELECT_ALL_COLUMNS_LOCATOR)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.flight_page.FlightPage object at 0x7f83422bafa0>\nlocator = ('xpath', \"(//div[contains(@role,'presentation')])[81]\")\n\n    def click(self, locator):\n        try:\n            element = self.wait.until(EC.element_to_be_clickable(locator))\n            self.driver.execute_script(\"arguments[0].scrollIntoView({block: 'center'});\", element)\n            try:\n                element.click()\n            except ElementClickInterceptedException:\n                self.driver.execute_script(\"arguments[0].click();\", element)\n            return self\n        except TimeoutException:\n>           raise Exception(f\"[CLICK ERROR] Element not clickable: {locator}\")\nE           Exception: [CLICK ERROR] Element not clickable: ('xpath', \"(//div[contains(@role,'presentation')])[81]\")\n\nsrc/utils/browser_utility.py:32: Exception","steps":[{"name":"Enter email and password and click Sign In.","time":{"start":1756130708132,"stop":1756130719997,"duration":11865},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'sumit@kgrp.in'"},{"name":"password","value":"'HRzyUJi0'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"20ffda7faa3d1d58","name":"test_all_table_headers_aggregate_functionality_2025-08-25_14-05-31.png","source":"20ffda7faa3d1d58.png","type":"image/png","size":44135}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1756130731876,"stop":1756130731947,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"src.tests"},{"name":"suite","value":"test_04_flight"},{"name":"subSuite","value":"TestFlights"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.tests.test_04_flight"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":["broken"],"flaky":false}],"tags":["smoke"]},"source":"c03e08ca99e86e3b.json","parameterValues":[]}