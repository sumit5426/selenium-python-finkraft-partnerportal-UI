{"uid":"6397963fe3091f19","name":"verifying the airline table heading label name","fullName":"src.tests.test_03_credentials.TestCredentials#test_airline_table_headings_match_expected","historyId":"c33127e30822b16ffd3ff415f6ce4fc5","time":{"start":1756129841710,"stop":1756129858207,"duration":16497},"status":"failed","statusMessage":"AssertionError: Expected AG Grid headings ['Group', 'Airlines', 'PAN', 'Username', 'Password', 'App Code', 'OTP Email', 'OTP Email Password'], but got ['Group', 'Airlines', 'PAN', 'Username', 'Password']\nassert ['Group', 'Ai...', 'Password'] == ['Group', 'Ai...pp Code', ...]\n  \n  Right contains 3 more items, first extra item: 'App Code'\n  \n  Full diff:\n    [\n        'Group',\n        'Airlines',\n        'PAN',\n        'Username',\n        'Password',\n  -     'App Code',\n  -     'OTP Email',\n  -     'OTP Email Password',\n    ]","statusTrace":"self = <tests.test_03_credentials.TestCredentials object at 0x7f83422b5af0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6e1caaa8d8ea7940fdd7979141f485db\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"verifying the airline table heading label name\")\n    @pytest.mark.smoke\n    def test_airline_table_headings_match_expected(self, driver, config):\n        expected_headings = ['Group', 'Airlines', 'PAN', 'Username', 'Password', 'App Code', 'OTP Email','OTP Email Password']\n        login_page = LoginPage(driver)\n        dashboard_page = login_page.login(config[\"username\"], config[\"password\"])\n        credentials_page = dashboard_page.go_to_credentials()\n        actual_headings = credentials_page.get_airline_ag_grid_table_headings()\n        if not actual_headings:\n            pytest.skip(\"No data present, so table headings are not rendered.\")\n>       assert actual_headings == expected_headings, (\n            f\"Expected AG Grid headings {expected_headings}, but got {actual_headings}\"\n        )\nE       AssertionError: Expected AG Grid headings ['Group', 'Airlines', 'PAN', 'Username', 'Password', 'App Code', 'OTP Email', 'OTP Email Password'], but got ['Group', 'Airlines', 'PAN', 'Username', 'Password']\nE       assert ['Group', 'Ai...', 'Password'] == ['Group', 'Ai...pp Code', ...]\nE         \nE         Right contains 3 more items, first extra item: 'App Code'\nE         \nE         Full diff:\nE           [\nE               'Group',\nE               'Airlines',\nE               'PAN',\nE               'Username',\nE               'Password',\nE         -     'App Code',\nE         -     'OTP Email',\nE         -     'OTP Email Password',\nE           ]\n\nsrc/tests/test_03_credentials.py:78: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1756129298633,"stop":1756129298638,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1756129839162,"stop":1756129841709,"duration":2547},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected AG Grid headings ['Group', 'Airlines', 'PAN', 'Username', 'Password', 'App Code', 'OTP Email', 'OTP Email Password'], but got ['Group', 'Airlines', 'PAN', 'Username', 'Password']\nassert ['Group', 'Ai...', 'Password'] == ['Group', 'Ai...pp Code', ...]\n  \n  Right contains 3 more items, first extra item: 'App Code'\n  \n  Full diff:\n    [\n        'Group',\n        'Airlines',\n        'PAN',\n        'Username',\n        'Password',\n  -     'App Code',\n  -     'OTP Email',\n  -     'OTP Email Password',\n    ]","statusTrace":"self = <tests.test_03_credentials.TestCredentials object at 0x7f83422b5af0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6e1caaa8d8ea7940fdd7979141f485db\")>\nconfig = {'browser': 'chrome', 'client': 'MMT', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"verifying the airline table heading label name\")\n    @pytest.mark.smoke\n    def test_airline_table_headings_match_expected(self, driver, config):\n        expected_headings = ['Group', 'Airlines', 'PAN', 'Username', 'Password', 'App Code', 'OTP Email','OTP Email Password']\n        login_page = LoginPage(driver)\n        dashboard_page = login_page.login(config[\"username\"], config[\"password\"])\n        credentials_page = dashboard_page.go_to_credentials()\n        actual_headings = credentials_page.get_airline_ag_grid_table_headings()\n        if not actual_headings:\n            pytest.skip(\"No data present, so table headings are not rendered.\")\n>       assert actual_headings == expected_headings, (\n            f\"Expected AG Grid headings {expected_headings}, but got {actual_headings}\"\n        )\nE       AssertionError: Expected AG Grid headings ['Group', 'Airlines', 'PAN', 'Username', 'Password', 'App Code', 'OTP Email', 'OTP Email Password'], but got ['Group', 'Airlines', 'PAN', 'Username', 'Password']\nE       assert ['Group', 'Ai...', 'Password'] == ['Group', 'Ai...pp Code', ...]\nE         \nE         Right contains 3 more items, first extra item: 'App Code'\nE         \nE         Full diff:\nE           [\nE               'Group',\nE               'Airlines',\nE               'PAN',\nE               'Username',\nE               'Password',\nE         -     'App Code',\nE         -     'OTP Email',\nE         -     'OTP Email Password',\nE           ]\n\nsrc/tests/test_03_credentials.py:78: AssertionError","steps":[{"name":"Enter email and password and click Sign In.","time":{"start":1756129841711,"stop":1756129854581,"duration":12870},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'sumit@kgrp.in'"},{"name":"password","value":"'HRzyUJi0'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8c168517a799ad4d","name":"test_airline_table_headings_match_expected_2025-08-25_13-50-58.png","source":"8c168517a799ad4d.png","type":"image/png","size":42401}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1756129858238,"stop":1756129858308,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"src.tests"},{"name":"suite","value":"test_03_credentials"},{"name":"subSuite","value":"TestCredentials"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.tests.test_03_credentials"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":["failed"],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":6},"items":[{"uid":"1bb820ecc6cb8a0b","status":"passed","time":{"start":1754371324519,"stop":1754371340976,"duration":16457}},{"uid":"28e0e18effc31de5","status":"passed","time":{"start":1753857907962,"stop":1753857921814,"duration":13852}},{"uid":"76dff0b0f9487c5d","status":"passed","time":{"start":1753682784811,"stop":1753682799672,"duration":14861}},{"uid":"f04c66f8cee0447d","status":"passed","time":{"start":1753442690435,"stop":1753442707986,"duration":17551}},{"uid":"7cc389a34a47b419","status":"passed","time":{"start":1753438720316,"stop":1753438734559,"duration":14243}}]},"tags":["smoke"]},"source":"6397963fe3091f19.json","parameterValues":[]}