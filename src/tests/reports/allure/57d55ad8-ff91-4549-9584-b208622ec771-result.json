{"name": "Verify all custom dropdowns under filters have values", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=138.0.7204.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n0   chromedriver                        0x0000000103338ea4 cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x0000000103330dac cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x0000000102e823ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x0000000102e880a0 cxxbridge1$string$len + 114380\n4   chromedriver                        0x0000000102e8a3e4 cxxbridge1$string$len + 123408\n5   chromedriver                        0x0000000102e8a48c cxxbridge1$string$len + 123576\n6   chromedriver                        0x0000000102ecc0ac cxxbridge1$string$len + 392920\n7   chromedriver                        0x0000000102f0c2d0 cxxbridge1$string$len + 655612\n8   chromedriver                        0x0000000102f0a934 cxxbridge1$string$len + 649056\n9   chromedriver                        0x0000000102ebd834 cxxbridge1$string$len + 333408\n10  chromedriver                        0x00000001032fbfc0 cxxbridge1$str$ptr + 2473268\n11  chromedriver                        0x00000001032ff22c cxxbridge1$str$ptr + 2486176\n12  chromedriver                        0x00000001032dda08 cxxbridge1$str$ptr + 2348924\n13  chromedriver                        0x00000001032ffae8 cxxbridge1$str$ptr + 2488412\n14  chromedriver                        0x00000001032cea98 cxxbridge1$str$ptr + 2287628\n15  chromedriver                        0x000000010331f9d8 cxxbridge1$str$ptr + 2619212\n16  chromedriver                        0x000000010331fb64 cxxbridge1$str$ptr + 2619608\n17  chromedriver                        0x00000001033309e8 cxxbridge1$str$ptr + 2688860\n18  libsystem_pthread.dylib             0x00000001967c5f94 _pthread_start + 136\n19  libsystem_pthread.dylib             0x00000001967c0d34 thread_start + 8", "trace": "self = <tests.test_dashboard.TestDashBoard object at 0x107da12b0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7284120245cbd2de5dc387f73af81bc9\")>\nconfig = {'browser': 'chrome', 'client': 'YATRA', 'env': 'QA', 'execution': 'local', ...}\n\n    @allure.title(\"Verify all custom dropdowns under filters have values\")\n    @pytest.mark.smoke\n    def test_custom_dropdowns_values(self, driver, config):\n        login_page = LoginPage(driver)\n        dashboard_page = login_page.login(config[\"username\"], config[\"password\"])\n>       dashboard_page.validate_all_dropdowns_have_vaalues()\n\ntest_dashboard.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/dashboard_page.py:261: in validate_all_dropdowns_have_vaalues\n    self.switch_to_dashboard_iframe()\n../pages/dashboard_page.py:60: in switch_to_dashboard_iframe\n    self.driver.switch_to.frame(iframe)\n../../.venv/lib/python3.9/site-packages/selenium/webdriver/remote/switch_to.py:95: in frame\n    self._driver.execute(Command.SWITCH_TO_FRAME, {\"id\": frame_reference})\n../../.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:448: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x107da1df0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...0001967c5f94 _pthread_start + 136\\\\n19  libsystem_pthread.dylib             0x00000001967c0d34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=138.0.7204.93); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000103338ea4 cxxbridge1$str$ptr + 2722840\nE       1   chromedriver                        0x0000000103330dac cxxbridge1$str$ptr + 2689824\nE       2   chromedriver                        0x0000000102e823ec cxxbridge1$string$len + 90648\nE       3   chromedriver                        0x0000000102e880a0 cxxbridge1$string$len + 114380\nE       4   chromedriver                        0x0000000102e8a3e4 cxxbridge1$string$len + 123408\nE       5   chromedriver                        0x0000000102e8a48c cxxbridge1$string$len + 123576\nE       6   chromedriver                        0x0000000102ecc0ac cxxbridge1$string$len + 392920\nE       7   chromedriver                        0x0000000102f0c2d0 cxxbridge1$string$len + 655612\nE       8   chromedriver                        0x0000000102f0a934 cxxbridge1$string$len + 649056\nE       9   chromedriver                        0x0000000102ebd834 cxxbridge1$string$len + 333408\nE       10  chromedriver                        0x00000001032fbfc0 cxxbridge1$str$ptr + 2473268\nE       11  chromedriver                        0x00000001032ff22c cxxbridge1$str$ptr + 2486176\nE       12  chromedriver                        0x00000001032dda08 cxxbridge1$str$ptr + 2348924\nE       13  chromedriver                        0x00000001032ffae8 cxxbridge1$str$ptr + 2488412\nE       14  chromedriver                        0x00000001032cea98 cxxbridge1$str$ptr + 2287628\nE       15  chromedriver                        0x000000010331f9d8 cxxbridge1$str$ptr + 2619212\nE       16  chromedriver                        0x000000010331fb64 cxxbridge1$str$ptr + 2619608\nE       17  chromedriver                        0x00000001033309e8 cxxbridge1$str$ptr + 2688860\nE       18  libsystem_pthread.dylib             0x00000001967c5f94 _pthread_start + 136\nE       19  libsystem_pthread.dylib             0x00000001967c0d34 thread_start + 8\n\n../../.venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException"}, "steps": [{"name": "Enter email and password and click Sign In.", "status": "passed", "parameters": [{"name": "username", "value": "'sumit@kgrp.in'"}, {"name": "password", "value": "'HRzyUJi0'"}], "start": 1751976060636, "stop": 1751976061188}], "attachments": [{"name": "test_custom_dropdowns_values_2025-07-08_17-31-06.png", "source": "da2d633b-41f7-4423-83ea-2126e6f5af6c-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "dc7fbc02-83de-4da3-88ce-91a633f52901-attachment.txt", "type": "text/plain"}], "start": 1751976060635, "stop": 1751976066719, "uuid": "03300054-7eb0-4263-8f7e-69514eea7cd1", "historyId": "19a5fb1536538ca7311694ec3e79de6b", "testCaseId": "19a5fb1536538ca7311694ec3e79de6b", "fullName": "src.tests.test_dashboard.TestDashBoard#test_custom_dropdowns_values", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "src.tests"}, {"name": "suite", "value": "test_dashboard"}, {"name": "subSuite", "value": "TestDashBoard"}, {"name": "host", "value": "macs-MacBook-Pro.local"}, {"name": "thread", "value": "33319-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.tests.test_dashboard"}]}