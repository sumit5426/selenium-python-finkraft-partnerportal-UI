{"uid":"8898e6176a114a1d","name":"test_login_workspace","fullName":"src.tests.test_login#test_login_workspace","historyId":"546c30a31bdabafc4bcae83968db73e0","time":{"start":1747559777555,"stop":1747559787629,"duration":10074},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001026083cc cxxbridge1$str$ptr + 2829900\n1   chromedriver                        0x0000000102600694 cxxbridge1$str$ptr + 2797844\n2   chromedriver                        0x000000010213dfbc cxxbridge1$string$len + 90140\n3   chromedriver                        0x00000001021851bc cxxbridge1$string$len + 381468\n4   chromedriver                        0x00000001021c6044 cxxbridge1$string$len + 647332\n5   chromedriver                        0x00000001021793f8 cxxbridge1$string$len + 332888\n6   chromedriver                        0x00000001025cc7f0 cxxbridge1$str$ptr + 2585200\n7   chromedriver                        0x00000001025cfac0 cxxbridge1$str$ptr + 2598208\n8   chromedriver                        0x00000001025addc4 cxxbridge1$str$ptr + 2459716\n9   chromedriver                        0x00000001025d0338 cxxbridge1$str$ptr + 2600376\n10  chromedriver                        0x000000010259f650 cxxbridge1$str$ptr + 2400464\n11  chromedriver                        0x00000001025f029c cxxbridge1$str$ptr + 2731292\n12  chromedriver                        0x00000001025f0428 cxxbridge1$str$ptr + 2731688\n13  chromedriver                        0x00000001026002e0 cxxbridge1$str$ptr + 2796896\n14  libsystem_pthread.dylib             0x0000000199ec9f94 _pthread_start + 136\n15  libsystem_pthread.dylib             0x0000000199ec4d34 thread_start + 8","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"82de34d83429df947b11d8ad1f14b976\")>\nconfig = {'browser': 'chrome', 'client': 'client1', 'env': 'qa', 'execution': 'local', ...}\n\n    def test_login_workspace(driver, config):\n        page = LoginPage(driver)\n>       page.login(config[\"username\"], config[\"password\"])\n\nsrc/tests/test_login.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/pages/login_page.py:11: in login\n    self.enter_text((By.ID, \"username\"), username)\nsrc/utils/browser_utility.py:15: in enter_text\n    self.wait.until(EC.visibility_of_element_located(locator)).send_keys(text)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"82de34d83429df947b11d8ad1f14b976\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x103fe00d0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001026083cc cxxbridge1$str$ptr + 2829900\nE       1   chromedriver                        0x0000000102600694 cxxbridge1$str$ptr + 2797844\nE       2   chromedriver                        0x000000010213dfbc cxxbridge1$string$len + 90140\nE       3   chromedriver                        0x00000001021851bc cxxbridge1$string$len + 381468\nE       4   chromedriver                        0x00000001021c6044 cxxbridge1$string$len + 647332\nE       5   chromedriver                        0x00000001021793f8 cxxbridge1$string$len + 332888\nE       6   chromedriver                        0x00000001025cc7f0 cxxbridge1$str$ptr + 2585200\nE       7   chromedriver                        0x00000001025cfac0 cxxbridge1$str$ptr + 2598208\nE       8   chromedriver                        0x00000001025addc4 cxxbridge1$str$ptr + 2459716\nE       9   chromedriver                        0x00000001025d0338 cxxbridge1$str$ptr + 2600376\nE       10  chromedriver                        0x000000010259f650 cxxbridge1$str$ptr + 2400464\nE       11  chromedriver                        0x00000001025f029c cxxbridge1$str$ptr + 2731292\nE       12  chromedriver                        0x00000001025f0428 cxxbridge1$str$ptr + 2731688\nE       13  chromedriver                        0x00000001026002e0 cxxbridge1$str$ptr + 2796896\nE       14  libsystem_pthread.dylib             0x0000000199ec9f94 _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x0000000199ec4d34 thread_start + 8\n\n.venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"config","time":{"start":1747559769854,"stop":1747559769856,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"driver","time":{"start":1747559769857,"stop":1747559777548,"duration":7691},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001026083cc cxxbridge1$str$ptr + 2829900\n1   chromedriver                        0x0000000102600694 cxxbridge1$str$ptr + 2797844\n2   chromedriver                        0x000000010213dfbc cxxbridge1$string$len + 90140\n3   chromedriver                        0x00000001021851bc cxxbridge1$string$len + 381468\n4   chromedriver                        0x00000001021c6044 cxxbridge1$string$len + 647332\n5   chromedriver                        0x00000001021793f8 cxxbridge1$string$len + 332888\n6   chromedriver                        0x00000001025cc7f0 cxxbridge1$str$ptr + 2585200\n7   chromedriver                        0x00000001025cfac0 cxxbridge1$str$ptr + 2598208\n8   chromedriver                        0x00000001025addc4 cxxbridge1$str$ptr + 2459716\n9   chromedriver                        0x00000001025d0338 cxxbridge1$str$ptr + 2600376\n10  chromedriver                        0x000000010259f650 cxxbridge1$str$ptr + 2400464\n11  chromedriver                        0x00000001025f029c cxxbridge1$str$ptr + 2731292\n12  chromedriver                        0x00000001025f0428 cxxbridge1$str$ptr + 2731688\n13  chromedriver                        0x00000001026002e0 cxxbridge1$str$ptr + 2796896\n14  libsystem_pthread.dylib             0x0000000199ec9f94 _pthread_start + 136\n15  libsystem_pthread.dylib             0x0000000199ec4d34 thread_start + 8","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"82de34d83429df947b11d8ad1f14b976\")>\nconfig = {'browser': 'chrome', 'client': 'client1', 'env': 'qa', 'execution': 'local', ...}\n\n    def test_login_workspace(driver, config):\n        page = LoginPage(driver)\n>       page.login(config[\"username\"], config[\"password\"])\n\nsrc/tests/test_login.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/pages/login_page.py:11: in login\n    self.enter_text((By.ID, \"username\"), username)\nsrc/utils/browser_utility.py:15: in enter_text\n    self.wait.until(EC.visibility_of_element_located(locator)).send_keys(text)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"82de34d83429df947b11d8ad1f14b976\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x103fe00d0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001026083cc cxxbridge1$str$ptr + 2829900\nE       1   chromedriver                        0x0000000102600694 cxxbridge1$str$ptr + 2797844\nE       2   chromedriver                        0x000000010213dfbc cxxbridge1$string$len + 90140\nE       3   chromedriver                        0x00000001021851bc cxxbridge1$string$len + 381468\nE       4   chromedriver                        0x00000001021c6044 cxxbridge1$string$len + 647332\nE       5   chromedriver                        0x00000001021793f8 cxxbridge1$string$len + 332888\nE       6   chromedriver                        0x00000001025cc7f0 cxxbridge1$str$ptr + 2585200\nE       7   chromedriver                        0x00000001025cfac0 cxxbridge1$str$ptr + 2598208\nE       8   chromedriver                        0x00000001025addc4 cxxbridge1$str$ptr + 2459716\nE       9   chromedriver                        0x00000001025d0338 cxxbridge1$str$ptr + 2600376\nE       10  chromedriver                        0x000000010259f650 cxxbridge1$str$ptr + 2400464\nE       11  chromedriver                        0x00000001025f029c cxxbridge1$str$ptr + 2731292\nE       12  chromedriver                        0x00000001025f0428 cxxbridge1$str$ptr + 2731688\nE       13  chromedriver                        0x00000001026002e0 cxxbridge1$str$ptr + 2796896\nE       14  libsystem_pthread.dylib             0x0000000199ec9f94 _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x0000000199ec4d34 thread_start + 8\n\n.venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","steps":[],"attachments":[{"uid":"f4250adbc8abf7eb","name":"log","source":"f4250adbc8abf7eb.txt","type":"text/plain","size":9696}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1747559787695,"stop":1747559787826,"duration":131},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"src.tests"},{"name":"suite","value":"test_login"},{"name":"host","value":"macs-MacBook-Pro.local"},{"name":"thread","value":"81712-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"8898e6176a114a1d.json","parameterValues":[]}